<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on Yongfu&#39;s Blog</title><link>https://yongfu.name/tags/javascript/</link><description>Recent content in Javascript on Yongfu&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yongfu.name/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>A Timer for Interval Training</title><link>https://yongfu.name/2021/06/06/interval-timer/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://yongfu.name/2021/06/06/interval-timer/</guid><description>Last year I have tried home workouts since the gym was shutdown for about four months. During that time, I realized that it is harder to maintain the challenge and effectiveness of the workout since few training equipments are available at home. Later I found out that time is a crucial factor to increase the challenge and effectiveness of the training. By incorporating interval training to my workout schedule, I started to see the gains!</description></item><item><title>Getting Tabular Data Through JavaScript in Compiled R Markdown Documents</title><link>https://yongfu.name/2020/09/09/getable/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://yongfu.name/2020/09/09/getable/</guid><description>Recently, I have learned more about JavaScript and created a few JS web apps. This gave me the idea that we can separate the content and the data in an HTML document to make it more dynamic&amp;mdash;the content stays static while the data could be updated independently without rewriting or recompiling the HTML document. This could be done by utilizing JavaScript&amp;rsquo;s ability to asynchronously fetch data from the web and generate DOM elements based on these data.</description></item><item><title>What if I Have No Server?</title><link>https://yongfu.name/2020/05/26/what-if-i-have-no-server/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://yongfu.name/2020/05/26/what-if-i-have-no-server/</guid><description>In my previous post, I describe how I created a web app that can search and locate patterns in interlinear glosses written in Word documents (docx) to facilitate the workflow of documenting language. I tried to make the (backend) app extremely easy to install, but still, most of my classmates didn&amp;rsquo;t even try to install it. It is just to frightening for people without any programming experience to install python on their own.</description></item><item><title>Recreating Leipizig.js with Vue for Interlinear Glossing</title><link>https://yongfu.name/2020/02/22/leipzigvue/</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://yongfu.name/2020/02/22/leipzigvue/</guid><description>I noticed Leipzig.js from George Moroz&amp;rsquo;s GitHub activity (he starred bdchauvette/leipzig.js a few months ago). This JS library is fantastic, and at the moment I saw it, I came up with an idea of building a web app facilitating interlinear glossing. During Chinese New Year, I finally started on the project. I thought it would be easy since I had some experience with Vue.js before1, but it turned out that leipzig.</description></item><item><title>Convert SVGs to PNGs with Your Web Browser</title><link>https://yongfu.name/2019/07/06/svg2png/</link><pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/07/06/svg2png/</guid><description>I recently found a great course about web programming on edX and learned a lot from it (I knew little about back-end web development and were unfamiliar with JavaScript). When I learned that it is possible to draw an SVG with the mouse in the browser, some interesting stuff came up to me &amp;mdash; can I download the SVG after I finished drawing? I found some solutions on the web pretty easily.</description></item></channel></rss>