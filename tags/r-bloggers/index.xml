<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R Bloggers on Yongfu&#39;s Blog</title><link>https://yongfu.name/tags/r-bloggers/</link><description>Recent content in R Bloggers on Yongfu&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 09 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yongfu.name/tags/r-bloggers/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Tabular Data Through JavaScript in Compiled R Markdown Documents</title><link>https://yongfu.name/2020/09/09/getable/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://yongfu.name/2020/09/09/getable/</guid><description>Recently, I have learned more about JavaScript and created a few JS web apps. This gave me the idea that we can separate the content and the data in an HTML document to make it more dynamic&amp;mdash;the content stays static while the data could be updated independently without rewriting or recompiling the HTML document. This could be done by utilizing JavaScript&amp;rsquo;s ability to asynchronously fetch data from the web and generate DOM elements based on these data.</description></item><item><title>Tips to Reduce the Complexity of Slide Making with Xaringan</title><link>https://yongfu.name/2019/04/29/xaringan_tips/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/04/29/xaringan_tips/</guid><description>Although I&amp;rsquo;m a strong believer in R Markdown, I&amp;rsquo;m not so sure about it in the realm of slide making. After using GUI slide making tools such as Powerpoint or Google Slides for years, it is not easy to get used to making slides with markdown, since it requires additional processing in the brain &amp;ndash; the conversion between images in the brain and the markup language to create them on the slides.</description></item><item><title>Wrapper of knitr::include_graphics to Handle URLs &amp; PDF Outputs</title><link>https://yongfu.name/2019/03/10/include_graphics2/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/03/10/include_graphics2/</guid><description>Those who use knitr::include_graphics() frequently in their R Markdown files may discover some inconsistencies (from the user point of view) if the same Rmd is used for multiple output formats, especially when PDF (LaTeX) is involved.
The following code works fine for HTML outputs but fails when the outputs are PDFs:
knitr::include_graphics(&#39;local.gif&#39;) knitr::include_graphics(&#39;https://commonmark.org/images/markdown-mark.png&#39;) The first case is obvious since it&amp;rsquo;s impossible to include a GIF in a PDF document.</description></item><item><title>Visualizing Language Loss in Taiwan</title><link>https://yongfu.name/2019/02/17/visualize-language-loss/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/02/17/visualize-language-loss/</guid><description>Taiwan Language Survey is a small project I worked on during May to June in 2018. The idea was to create a survey that continuously collects data and a web page that visualizes the collected data. The web page is updated weekly using Travis-CI.
The main purpose of this survey is to raise public awareness of language loss in Taiwan. Hence, the survey is designed to collect data that can provide valuable information about language loss, for example, some questions were asked to gain insight about the change of linguistic competence acoss generations in a family (i.</description></item><item><title>Inserting “Edit on GitHub” Buttons in a Single R Markdown Document</title><link>https://yongfu.name/2019/02/10/rmd_edit_btn/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/02/10/rmd_edit_btn/</guid><description>As the R Markdown ecosystem becomes larger, users now may encounter situations where they have to make decisions on which output format of R Markdown to use. One may found none of the formats suitable – the features essential to the output document one wants may scatter across different output formats of R Markdown.
Here is a real example I encountered. I wanted to create a document that:
supports bookdown syntax, e.</description></item><item><title>Using Travis-CI to Create R-bloggers for Taiwan</title><link>https://yongfu.name/2019/01/30/recreate-rbloggers/</link><pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/01/30/recreate-rbloggers/</guid><description>R-bloggers.com is a great platform for R users, but I sometimes feel awkward to publish posts on R-bloggers when I have things to share that are only relevant to users in Taiwan1. Inspired by R-bloggers, I thought maybe I could use Travis-CI and GitHub to create a blog that automatically updates its posts by retrieving them from submitted RSS feeds, just like R-bloggers.
R-bloggers for Taiwan The name of the blog I created is &amp;ldquo;R部落客&amp;rdquo;, which is R-bloggers literally in traditional Chinese.</description></item><item><title>Customizing Hugo / Blogdown RSS Templates</title><link>https://yongfu.name/2018/12/13/hugo_rss/</link><pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/12/13/hugo_rss/</guid><description>Blogdown makes it easy to create Hugo blogs or personal websites, and it is becoming more and more popular in the R community. Once the blog is created, people might want to submit their blogs&amp;rsquo; RSS feeds to R-bloggers. But before that can happen, one must modify the RSS template to meet the requirements of RSS submission.
Due to my successful experience in creating a new Jekyll RSS template for my blog, I thought it would be easy to customize the RSS template of Hugo blogs to make it suitable for R-bloggers.</description></item><item><title>Create a Glossary in R Markdown</title><link>https://yongfu.name/2018/10/24/glossary-maker/</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/10/24/glossary-maker/</guid><description>I was thinking about creating a glossary in bookdown and found out that there was already an issue about it. I like Yihui’s recommendation: use Pandoc’s definition lists. This was exactly what I had been doing, but I quickly found out that there was a major drawback – the definition lists won’t order alphabetically unless written in that way.
So I wrote an R function to reorder the definition lists written in R Markdown.</description></item><item><title>Easy Linguistics Document Writing with R Markdown</title><link>https://yongfu.name/2018/09/09/linguistics-down/</link><pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/09/09/linguistics-down/</guid><description>I’ve written a post about rendering IPA symbols properly regardless of the output format of the R Markdown document. I implemented the ideas into an R package, linguisticsdown. linguisticsdown provides a Shiny interface to facilitate inserting IPA symbols in R Markdown. See a quick demo of the current feature of linguisticsdown in the gif at the end of the post.
A live demo is hosted on shinyapps.io. For more details, visit linguisticsdown.</description></item><item><title>Rendering IPA Symbols in R Markdown</title><link>https://yongfu.name/2018/09/06/ipa-symbols/</link><pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/09/06/ipa-symbols/</guid><description>I was thinking about promoting reproducible research in Linguistics, or more precisely, how to attract people with no programming skills to have incentives to learn at least a bit programming, so that they have the ability to make their research more reproducible. I arrived at the solution: start by adopting R Markdown to write articles (see the last section for details), but making R Markdown more friendly to novices in a particular field of academia is crucial to enhance their incentives to learn programming.</description></item><item><title>Making Jekyll Blog Suitable for R-bloggers</title><link>https://yongfu.name/2018/08/02/rblogger-criteria/</link><pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/08/02/rblogger-criteria/</guid><description>According to the post add your blog, adding one’s blog to R-bloggers isn’t easy at all, especially for people who use R Markdown to write posts and use Jekyll to generate static web page on GitHub. HUGOMORE42 Two reasons make it difficult:
The feed you submit should ONLY be about R (e.g: with R code, or directly related to the R world/community).
This causes problem because most bloggers write posts spanning several topics, and some blogging platform doesn’t support RSS feed for a particular category of posts.</description></item><item><title>My Notes on R Markdown</title><link>https://yongfu.name/2018/07/23/rmd_intro/</link><pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/07/23/rmd_intro/</guid><description>I’ve used R Markdown to do lots of work, such as writing a book, doing homework on statistics and ecology, and making web pages. The above mentioned are all HTML output formats from R Markdown, but PDF output formats are also possible, such as this Beamer Slide and an article about R Markdown.
Because of doing so much work with R Markdown, I write down some of the most common and useful features of R Markdown so I can look it up when I need to1.</description></item></channel></rss>