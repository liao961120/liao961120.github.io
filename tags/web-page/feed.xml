<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Page on Yongfu&#39;s Blog</title><link>https://yongfu.name/tags/web-page/</link><description>Recent content in Web Page on Yongfu&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yongfu.name/tags/web-page/feed.xml" rel="self" type="application/rss+xml"/><item><title>A Timer for Interval Training</title><link>https://yongfu.name/2021/06/06/interval-timer/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://yongfu.name/2021/06/06/interval-timer/</guid><description>Last year I have tried home workouts since the gym was shutdown for about four months. During that time, I realized that it is harder to maintain the challenge and effectiveness of the workout since few training equipments are available at home. Later I found out that time is a crucial factor to increase the challenge and effectiveness of the training. By incorporating interval training to my workout schedule, I started to see the gains!</description></item><item><title>Convert SVGs to PNGs with Your Web Browser</title><link>https://yongfu.name/2019/07/06/svg2png/</link><pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/07/06/svg2png/</guid><description>I recently found a great course about web programming on edX and learned a lot from it (I knew little about back-end web development and were unfamiliar with JavaScript). When I learned that it is possible to draw an SVG with the mouse in the browser, some interesting stuff came up to me &amp;mdash; can I download the SVG after I finished drawing? I found some solutions on the web pretty easily.</description></item><item><title>Visualizing Language Loss in Taiwan</title><link>https://yongfu.name/2019/02/17/visualize-language-loss/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://yongfu.name/2019/02/17/visualize-language-loss/</guid><description>Taiwan Language Survey is a small project I worked on during May to June in 2018. The idea was to create a survey that continuously collects data and a web page that visualizes the collected data. The web page is updated weekly using Travis-CI.
The main purpose of this survey is to raise public awareness of language loss in Taiwan. Hence, the survey is designed to collect data that can provide valuable information about language loss, for example, some questions were asked to gain insight about the change of linguistic competence acoss generations in a family (i.</description></item><item><title>Customizing Hugo / Blogdown RSS Templates</title><link>https://yongfu.name/2018/12/13/hugo_rss/</link><pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/12/13/hugo_rss/</guid><description>Blogdown makes it easy to create Hugo blogs or personal websites, and it is becoming more and more popular in the R community. Once the blog is created, people might want to submit their blogs&amp;rsquo; RSS feeds to R-bloggers. But before that can happen, one must modify the RSS template to meet the requirements of RSS submission.
Due to my successful experience in creating a new Jekyll RSS template for my blog, I thought it would be easy to customize the RSS template of Hugo blogs to make it suitable for R-bloggers.</description></item><item><title>Making Jekyll Blog Suitable for R-bloggers</title><link>https://yongfu.name/2018/08/02/rblogger-criteria/</link><pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/08/02/rblogger-criteria/</guid><description>According to the post add your blog, adding one’s blog to R-bloggers isn’t easy at all, especially for people who use R Markdown to write posts and use Jekyll to generate static web page on GitHub. HUGOMORE42 Two reasons make it difficult:
The feed you submit should ONLY be about R (e.g: with R code, or directly related to the R world/community).
This causes problem because most bloggers write posts spanning several topics, and some blogging platform doesn’t support RSS feed for a particular category of posts.</description></item><item><title>google 表單即時回饋</title><link>https://yongfu.name/2018/04/20/gsheet_survey/</link><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/04/20/gsheet_survey/</guid><description>pre code {white-space: pre-wrap;} google 表單大幅降低蒐集問卷資料的難度；此外，表單將回應自動彙整成試算表更使分析資料變得非常容易。然而，google 表單缺乏一項重要的功能：即時將結果回饋給填寫者1。
讓問卷填寫者能馬上知道結果，可以增加其填寫意願，同時也是負責的態度(在回饋不會造成負面影響的前提下)。當然，這在 google 表單本身的限制下無法達成。以下將介紹如何結合 google 試算表 以及 DataCamp Light，讓任何人都能製作出一個在靜態網頁上運行的平台，使填寫者能在此填寫問卷、查詢結果。
實際操作 繼續閱讀下去前，可先至回饋功能示範平台操作看看，比較容易理解下文內容。文章中的說明即是依據此回饋功能示範平台。
概觀: 運作邏輯 上圖的每個方塊(除了左圖的試算表)名稱，皆對應到回饋功能示範平台背後運作的檔案。圖需要分左、右來看：
左側以使用者觀點為中心，顯示使用者填寫問卷(送出資料)到獲得回饋之間，資料流動的路程。
右側的流程圖，實際上是左圖試算表(表單、DataCamp之間)那格的完整路程，意即資料在 google 試算表間的流動及運算。使用者獲得的回饋即是由這些試算表的運算產生。
回饋功能運作的邏輯其實非常簡單：在問卷送出後，透過 google 試算表處理資料(運算、整理)；接著透過 DataCamp light 執行預先寫入的 R 語言，讀取經 google 試算表處理後的資料；最後使用者輸入查詢金鑰(於問卷中填寫)，篩選出那筆自己填寫的資料。
以下，說明如何設置問卷回饋系統的各個成分，並使用此資料夾中的檔案說明。檔案間的關係完全對應至上文概觀中的概念圖，亦即問卷回饋平台背後蒐集及運算資料所使用到的檔案。下方的說明，單純閱讀文字會難以理解。若有打算實作，可實際打開資料夾中的檔案以配合閱讀，或甚至完全自己重複文中的步驟。
表單、試算表 設置 這節將設置問卷回饋平台的資料蒐集與運算功能，包含 1 個 google 表單(表單)及 3 個 google 試算表(表單回應, 運算分析, 結果查找)。
連結表單至試算表 這項功能使用過 google 表單的人都知道，可參考 google 說明，以下簡單說明：
從雲端硬碟進入到表單後，即會顯示下圖的頁面(需具編輯權限)。注意需於中間白色方塊點選「回覆」，畫面才會如下圖(預設畫面是「問題」)。
接著點選白色方塊右上方的綠色 icon，即會出現 2 個選項：
建立新試算表，並命名。 (預設名稱為「無標題表單 (回應)」) 選取現有的試算表 選擇建立新的試算表。</description></item><item><title>Some New Features of TeXt Theme</title><link>https://yongfu.name/2018/02/24/new_md_features/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/02/24/new_md_features/</guid><description>I started customizing my blog template soon after I forked it from kitian616. The downside of customizing is that once started, there&amp;rsquo;s no going back.
I saw some new features added to the TeXt theme recently, some of which are quite appealing to me. Since I started custimizing my blog and since I&amp;rsquo;m a layman of web page design, I have to figure out how to implement these features by myself.</description></item><item><title>MathJax Setup</title><link>https://yongfu.name/2018/01/27/mathjax/</link><pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate><guid>https://yongfu.name/2018/01/27/mathjax/</guid><description>THIS POST IS OUTDATED
MathJax is a JavaScript display engine for mathematics that works in all browsers. By including MathJax support on the website, LaTeX mathematical expressions are rendered as pretty mathematical equations.
Add MathJax Support Add the code below to the &amp;lt;head&amp;gt; ... &amp;lt;/head&amp;gt; region of every page (.html) to enable MathJax support. The code below allows supporting $ and $$ in Markdown.
&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt; MathJax.Hub.Config({ tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]} }); &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot; async src=&amp;quot;//cdn.</description></item></channel></rss>